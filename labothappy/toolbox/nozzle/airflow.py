# -*- coding: utf-8 -*-
"""
Created on Thu Sep 28 14:44:25 2023

@author: Basile
"""

import pandas as pd
import numpy as np
from scipy.interpolate import interp1d
import os

def nozzle_tables():

    M = np.array([0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.30, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.40, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.50, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57, 0.58, 0.59, 0.60, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69])
    
    P_P0 = np.array([1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.98, 0.98, 0.98, 0.98, 0.98, 0.97, 0.97, 0.97, 0.96, 0.96, 0.96, 0.95, 0.95, 0.95, 0.94, 0.94, 0.94, 0.93, 0.93, 0.92, 0.92, 0.91, 0.91, 0.91, 0.90, 0.90, 0.89, 0.89, 0.88, 0.88, 0.87, 0.87, 0.86, 0.85, 0.85, 0.84, 0.84, 0.83, 0.83, 0.82, 0.81, 0.81, 0.80, 0.80, 0.79, 0.78, 0.78, 0.77, 0.77, 0.76, 0.75, 0.75, 0.74, 0.73, 0.73])
    
    T_T0 = np.array([1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.97, 0.97, 0.97, 0.97, 0.97, 0.97, 0.96, 0.96, 0.96, 0.96, 0.96, 0.96, 0.95, 0.95, 0.95, 0.95, 0.95, 0.94, 0.94, 0.94, 0.94, 0.94, 0.93, 0.93, 0.93, 0.93, 0.93, 0.93, 0.92, 0.92, 0.92, 0.92, 0.91, 0.91])
    
    A_A_star = np.array([1000000.00, 57.87, 28.94, 19.30, 14.48, 11.59, 9.67, 8.29, 7.26, 6.46, 5.82, 5.30, 4.86, 4.50, 4.18, 3.91, 3.67, 3.46, 3.28, 3.11, 2.96, 2.83, 2.71, 2.60, 2.50, 2.40, 2.32, 2.24, 2.17, 2.10, 2.04, 1.98, 1.92, 1.87, 1.82, 1.78, 1.74, 1.70, 1.66, 1.62, 1.59, 1.56, 1.53, 1.50, 1.47, 1.45, 1.42, 1.40, 1.38, 1.36, 1.34, 1.32, 1.30, 1.29, 1.27, 1.25, 1.24, 1.23, 1.21, 1.20, 1.19, 1.18, 1.17, 1.16, 1.15, 1.14, 1.13, 1.12, 1.11, 1.10])
    
    return np.array([M, P_P0, T_T0, A_A_star])

def nozzle(m_dot, T_in, cp_in, v_in, P_in, A1, A2):
    """
    Inputs :
        - m_dot : air mass flowrate [kg/s]
        - T_in : inlet air temperature [K]
        - cp_in : inlet air heat capacity [J/(kg*K)]
        - v_in : air inlet speed [m/s]
        - P_in : air inlet pressure [Pa] 
        - A1 : inlet area [m^2]
        - A2 : outlet area [m^2]
   -------------------------------------------------------
    Outputs :    
        - u_2 : air outlet speed [m/s]
        - T_2 : outlet air temperature [K]
        - P_2 : air outlet pressure [Pa] 
    """
    
    
    "1) Compressible flow functions"
    
    data = nozzle_tables()

    "2) Data"
    
    gamma = 1.4 # [/]
    R = 285.71429 # J/(kg*K)
        
    "2.1) Inlet"
            
    rho_in = P_in/(T_in*R)
    a_in = (gamma*R*T_in)**(1/2)
    
    "2.2) Total Properties"
    
    T_tot = T_in + (v_in**2)/(2*cp_in)
    rho_tot = rho_in/((T_in/T_tot)**(1/(gamma-1)))
    P_tot = rho_tot*R*T_tot
    
    # Critical area
    A_crit = m_dot/(rho_in*a_in)
    
    "2.3) Outlet properties"
    
    # Data Interpolation
    f_M = interp1d(data[3], data[0])
    f_T = interp1d(data[3], data[2])
    f_P = interp1d(data[3], data[1])
    
    # Relative area
    A_r_2 = A2/A_crit
    
    # Outlet State
    P_2 = P_tot*f_P(A_r_2)
    T_2 = T_tot*f_T(A_r_2)
    
    # Outlet Speed
    a_2 = (gamma*R*T_2)**(1/2)
    M_2 = f_M(A_r_2)
    u_2 = M_2*a_2
    
    return (u_2, T_2, P_2)
